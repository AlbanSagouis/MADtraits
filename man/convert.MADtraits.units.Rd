% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleaning.R
\name{convert.MADtraits.units}
\alias{convert.MADtraits.units}
\title{Harmonising variable units to match within MADTRAITS}
\usage{
convert.MADtraits.units(x, choices)
}
\arguments{
\item{x}{\code{\link{MADtraits}} object}

\item{choices}{Named vector of units, where the names are variables
and the values are the units you would like that unit in. See
examples - this isn't as confusing as it sounds. Units should
be given in standard scientific notation - see
\code{\link[convertr]{convert}} for more details.}
}
\value{
\code{\link{MADtraits}} object
}
\description{
A light wrapper around \code{\link[convertr]{convert}} to match
units across different variables. Using the \code{matches}
argument, you can changethe options for how each trait's units
should be converted. We advise caution when converting (and working
with) units, and suggest that (as with all datasets) users perform
sense checks first to ensure that the orders of magnitude over
which their data vary make sense.
}
\note{
*Please* run your data through \code{\link{clean.MADtraits}}
    before running this, as it will neaten up obvious mistakes in
    the input data's unit names. This will make the mathematical
    unit conversion a lot more straightforward and error-free.
}
\examples{
# Grab some example data (you should work with the output from the MADtraits function)
demo <- .pearse.2014()
# Convert all the units to the most common type
# - (a bit silly here as they're all standardised anyway!)
demo <- convert.MADtraits.units(demo)
# Now convert the "diameter" from millimeters to meters
units <- setNames("m", "diameter")
# (this is the same as the following)
units <- "m"
names(units) <- "diameter"
demo <- convert.MADtraits.units(demo, units)
#...you don't have to clean up just one unit
# - your "units" vector can be as long as you want
}
\seealso{
clean.MADtraits lookup.MADtraits.names
}
\author{
Will Pearse and Kathryn M. Welglarz
}
